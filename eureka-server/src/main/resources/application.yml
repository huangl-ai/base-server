---
spring:
  application:
    name: eurka-server
  profiles: peer1
server:
  port: 8761
eureka:
  instance:
    hostname: peer1
  client:
    serviceUrl:
      defaultZone: http://peer2:8762/eureka/,http://peer3:8763/eureka/
#       defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
---
spring:
  application:
    name: eurka-server
  profiles: peer2
server:
  port: 8762
eureka:
  instance:
    hostname: peer2
  client:
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/,http://peer3:8763/eureka/
---
spring:
  application:
    name: eurka-server
  profiles: peer3
server:
  port: 8763
eureka:
  instance:
    hostname: peer3
  client:
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/
---
spring:
  application:
    name: eurka-server
  profiles: peer4
server:
  port: 8761
eureka:
  instance:
    hostname: localhost
  client:
    #通过eureka.client.registerWithEureka：false和fetchRegistry：false来表明自己是一个eureka server.
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      #      defaultZone: http://192.168.0.18:8761/eureka/
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/